package ${pName};

import java.security.Principal;
import java.util.List;
import java.util.Date;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.*;
import com.alibaba.fastjson.JSONObject;
import com.yijiaqi.bsv1.AjaxResult;

/**
* @类说明: "[${cName}]app端Swagger控制器类 ,使用requestbody 实现"
* @author: ${auth}
* @date : ${time}
**/
@Api(value = "[${cName}]控制器", description = "[${cName}]相关操作" )
@Controller
@RequestMapping("/gd/${lowUpp}")
public class ${clsUpp}Controller extends GdBaseController{

    @Autowired
	private ${clsUpp}Service ${lowUpp}Service; //注入[${cName}]业务逻辑类

    /**
     * @方法说明：  新增[${cName}]记录
     */
    @ApiOperation(value = "新增[${cName}]", notes = "返回影响记录行数", httpMethod = "POST")
    @ApiImplicitParams(
    {
        @ApiImplicitParam(paramType = "body", dataType = "${clsUpp}", name = "${lowUpp}", value = "${cName}", required = true) 
    })
    @ResponseBody
    @RequestMapping(value = "/save", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
	public AjaxResult<JSONObject> save(@RequestBody ${clsUpp} ${lowUpp}) {
        return ${lowUpp}Service.save(${lowUpp});
    }
    

    /**
    * @方法说明： 删除[${cName}]记录
    */
    @ApiOperation(value = "删除[${cName}]", notes = "返回影响记录行数", httpMethod = "POST")
    @ApiImplicitParams({ @ApiImplicitParam(name = "id", value = "[${cName}]的主键", required = true, dataType = "array", paramType = "query")})
    @ResponseBody
    @RequestMapping(value = "/del", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
    public AjaxResult<JSONObject> delete(@RequestParam("id") ${idType} [] id) {
        return ${lowUpp}Service.delete(id);
    }

		
    /**
    * @方法说明： 修改[${cName}]记录
    */
    @ApiOperation(value = "修改[${cName}]", notes = "返回影响记录行数,(必须传入完整对象,否则会有数据丢失)", httpMethod = "POST")
     @ApiImplicitParams(
    {
        @ApiImplicitParam(paramType = "body", dataType = "${clsUpp}", name = "${lowUpp}", value = "${cName}", required = true) 
    })
    @ResponseBody
    @RequestMapping(value = "/update", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
    public AjaxResult<JSONObject> update(@RequestBody ${clsUpp} ${lowUpp}) {
        return ${lowUpp}Service.update(${lowUpp});
    }
	
	  /**
    * @方法说明： 修改[${cName}]记录
    */
    @ApiOperation(value = "修改[${cName}]", notes = "返回影响记录行数(传入需要修改的属性和主键即可,其他可以为空)", httpMethod = "POST")
     @ApiImplicitParams(
    {
        @ApiImplicitParam(paramType = "body", dataType = "${clsUpp}", name = "${lowUpp}", value = "${cName}", required = true) 
    })
    @ResponseBody
    @RequestMapping(value = "/updateNotNull", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
    public AjaxResult<JSONObject> updateNotNull(@RequestBody ${clsUpp} ${lowUpp}) {
        return ${lowUpp}Service.updateNotNull(${lowUpp});
    }

    /**
    * @方法说明： 按条件查询分页[${cName}]列表
    */
    @ApiOperation(value = "按条件查询分页[${cName}]列表", notes = "返回分页[${cName}]列表", httpMethod = "POST")
     @ApiImplicitParams(
    {
        @ApiImplicitParam(paramType = "body", dataType = "${clsUpp}Vo", name = "${lowUpp}Vo", value = "${cName}", required = true)
    })
    @ResponseBody
    @RequestMapping(value = "/queryPage", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
    public AjaxResult<JSONObject> queryPage(@RequestBody ${clsUpp}Vo ${lowUpp}Vo) {
        return ${lowUpp}Service.queryPage(${lowUpp}Vo);
    }

    /**
    * @方法说明： 按条件查询不分页[${cName}]列表
    */
    @ApiOperation(value = "按条件查询不分页[${cName}]列表", notes = "返回不分页[${cName}]列表", httpMethod = "POST")
    @ApiImplicitParams(
    {
        @ApiImplicitParam(paramType = "body", dataType = "${clsUpp}Vo", name = "${lowUpp}Vo", value = "${cName}", required = true)
    })
    @ResponseBody
    @RequestMapping(value = "/queryList", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
    public AjaxResult<JSONObject> queryList(@RequestBody ${clsUpp}Vo ${lowUpp}Vo) {
        return ${lowUpp}Service.queryList(${lowUpp}Vo);
    }
	
	  /**
    * @方法说明： 按条件查询一个 ${cName} 对象
    */
    @ApiOperation(value = "按条件查询一个 ${cName} 对象", notes = "返回 ${cName}对象", httpMethod = "POST")
    @ApiImplicitParams(
    {
        @ApiImplicitParam(paramType = "body", dataType = "${clsUpp}Vo", name = "${lowUpp}Vo", value = "${cName}", required = true)
    })
    @ResponseBody
    @RequestMapping(value = "/findOne", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
    public AjaxResult<JSONObject> findOne(@RequestBody ${clsUpp}Vo ${lowUpp}Vo) {
        return ${lowUpp}Service.findOne(${lowUpp}Vo);
    }
            
    /**
    * @方法说明： 按条件查询[${cName}]记录个数
    */
    @ApiOperation(value = "按条件查询[${cName}]记录个数", notes = "返回记录个数", httpMethod = "POST")
    @ApiImplicitParams(
    {
        @ApiImplicitParam(paramType = "body", dataType = "${clsUpp}Vo", name = "${lowUpp}Vo", value = "${cName}", required = true)
    })
    @ResponseBody
    @RequestMapping(value = "/queryCount", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
	public AjaxResult<JSONObject> queryCount(@RequestBody ${clsUpp}Vo ${lowUpp}Vo) {
        return ${lowUpp}Service.queryCount(${lowUpp}Vo);
	}
                
    /**
    * @方法说明： 按主键查询单条[${cName}]记录
    */
    @ApiOperation(value = "按主键查询单个[${cName}]记录", notes = "返回单个[${cName}]对象", httpMethod = "POST")
    @ApiImplicitParams({ @ApiImplicitParam(name = "id", value = "[${cName}]的主键", required = true, dataType = "${idType}", paramType = "query")})
    @ResponseBody
    @RequestMapping(value = "/findById", method = {RequestMethod.POST}, produces = "application/json; charset=UTF-8")
    public AjaxResult<JSONObject> findById(@RequestParam("id") ${idType} id) {
        return ${lowUpp}Service.findById(id);
    }

}

