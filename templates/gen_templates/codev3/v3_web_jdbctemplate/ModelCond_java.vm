package ${packageName} ;

/**
* 类说明: ${table.comment}--查询条件实体类
* @author ${author}
* 生成日期 ${time}
**/
@lombok.Setter
@lombok.Getter
@lombok.experimental.Accessors(chain = true)
@lombok.Builder	
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@io.swagger.annotations.ApiModel(value = "${table.className}Cond", description = "${table.comment}--查询条件实体类")
public class ${table.className}Cond extends org.alvin.code.gen.beans.BaseCondition {


    /**
    * 方法说明: 拼加自定义条件
    **/
    @Override
    public void addCondition() {
    #foreach ($fi in $fList)
        #if($fi.type == "String")
        add(this.${fi.lowerCamel} , " AND t.${fi.name} LIKE ? " ,3);
		#elseif($fi.type == "Date")
		add(this.${fi.lowerCamel} , " AND t.${fi.name} = ? " );
		if(this.${fi.lowerCamel}Start != null){
			add(org.alvin.utils.DateUtil.setStart(this.${fi.lowerCamel}Start ), " AND t.${fi.name} >= ? "); //${fi.comment}开始
		}
		if(this.${fi.lowerCamel}Start != null){
			add(org.alvin.utils.DateUtil.setEnd(this.${fi.lowerCamel}End), " AND t.${fi.name} <= ? "); //  ${fi.comment}结束
		}
        #else
        add(this.${fi.lowerCamel} , " AND t.${fi.name} = ? " );
        #end
    #end
    }

    //属性
    #foreach ($fi in $fList)
	@io.swagger.annotations.ApiModelProperty(value = "${fi.comment}", dataType = "${fi.allTypeName}")
    private  ${fi.allTypeName}  ${fi.lowerCamel} ;//  ${fi.comment}
		#if($fi.type == "Date")
			//日期查询范围
			@io.swagger.annotations.ApiModelProperty(value = "${fi.comment}开始", dataType = "${fi.allTypeName}")
			private  ${fi.allTypeName}  ${fi.lowerCamel}Start ;//  ${fi.comment}开始
			@io.swagger.annotations.ApiModelProperty(value = "${fi.comment}结束", dataType = "${fi.allTypeName}")
			private  ${fi.allTypeName}  ${fi.lowerCamel}End ;//  ${fi.comment}结束
		#end
    #end
	//其他常用条件字段
	@io.swagger.annotations.ApiModelProperty(value = "${id.comment}", dataType = "java.lang.List")
    private java.util.List<${id.allTypeName}> ${id.lowerCamel}List;// 主键列表

}