package ${pName};
import java.util.List;
import java.util.ArrayList;
import org.alvin.cishan.sys.util.Page;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import lombok.extern.slf4j.Slf4j;
/**
* @类说明: ${table.comment}--数据逻辑层
* @author: ${author}
* @date : ${time}
**/
@Slf4j
@Service
public class ${table.className}Service {

	@Autowired
	private ${table.className}Dao dao; //注入${table.comment}数据访问层

	/**
	* @方法说明：  新增[${table.comment}]记录
	*/
	@Transactional
	public int save(${table.className} ${table.varName}) {
		return dao.save(${table.varName});
	}

	/**
	* @方法说明：  删除${table.comment}记录(多条)
	*/
	public int delete(${id.allTypeName} ids[]) {
		//return dao.deleteLogic(ids);//逻辑删除
		return dao.delete(ids);//物理删除
	}

	/**
	* @方法说明：  更新${table.comment}记录
	*/
	@Transactional
	public int update(${table.className} ${table.varName}) {
		return dao.update(${table.varName}); 
	}

	 /**
    * @方法说明：更新${table.comment}记录,不为空的都更新掉
    */
    @Transactional
    public int updateNotNull(${table.className} ${table.varName}) {
		return dao.updateNotNull(${table.varName}); 
    }

	/**
	* @方法说明： 按条件查询分页${table.comment}列表
	*/
	public Page<${table.className}> queryPage(${table.className}Cond cond) {
		return dao.queryPage(cond);
	}

	/**
	* @方法说明： 按条件查询不分页${table.comment}列表(使用范型)
	*/
	public List<${table.className}> queryList(${table.className}Cond cond) {
		return dao.queryList(cond);
	}

	/**
	* @方法说明： 按ID查找单个${table.comment}记录
	*/
	public ${table.className} findById(${id.allTypeName} ${id.lowerCamel}) {
		return dao.findById(${id.lowerCamel});
	}

	/**
	* @方法说明： 按条件查询${table.comment}记录个数
	*/
	public long queryCount(${table.className}Cond cond) {
		return dao.queryCount(cond);
	}
}